//HourGlass_Challenge solution in java language

import java.util.Scanner;

class hourGlass_Challenge{

static int findMaxSum(int [][]mat, int n) 
{ 
    int row  = n;
    int column = n;
    if (row < 3 || column < 3) 
        return -1; 
  
    int maxSum = Integer.MIN_VALUE; 
    for (int i = 0; i < row - 2; i++) 
    { 
        for (int j = 0; j < column - 2; j++) 
        {  
            int sum = (mat[i][j] + mat[i][j + 1] +  
                       mat[i][j + 2]) + (mat[i + 1][j + 1]) +  
                       (mat[i + 2][j] + mat[i + 2][j + 1] +  
                       mat[i + 2][j + 2]); 
  
            maxSum = Math.max(maxSum, sum); 
        } 
    } 
    return maxSum; 
} 

static public void main (String[] args) 
    { 
	Scanner s = new Scanner(System.in);
	int input = s.nextInt();
        int [][]mat = new int[n][n]
	for(int i = 0; i< n; i++){
		for(int j = 0; j< n; j++){
			mat[i][j] = s.nextInt();
	}
	}
 
        int res = findMaxSum(mat, input); 
        if (res == -1) 
            System.out.println("Not possible"); 
        else
            System.out.println("Maximum sum of hour glass = "
                                + res); 
    }

}
