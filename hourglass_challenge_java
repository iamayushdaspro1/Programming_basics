import java.util.*;

public class Solution {

    // Returns maximum sum of hour glass in ar[][] 

    public static int hourglass(int[][] arr,int R,int C){
        int ans = Integer.MIN_VALUE;
        for(int i=0;i<R-2;i++){
            for(int j=0;j<C-2;j++){

                // Considering arr[i][j] as top left cell of 
            // hour glass.


                int sum= arr[i][j]+arr[i][j+1]+arr[i][j+2]+ arr[i+1][j+1]+arr[i+2][j]+arr[i+2][j+1]+arr[i+2][j+2];

             ans=Math.max(ans,sum);   //If previous sum is less then current sum i.e. ans then update new sum in ans   
            }
        }
        return ans;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int[][] arr = {{1, 1, 1, 0, 0},
                        {0, 1 ,0, 0 ,0},
                        {1 ,1 ,1 ,0 ,0},
                        {0 ,0 ,0, 0, 0},
                        {0 ,0, 0 ,0, 0 }};

    int R=arr.length;   // No of rows in Matrix

    int C=arr[0].length;  // No of Columns in matrix
    
        System.out.print(hourglass(arr,R,C));
    }
}
